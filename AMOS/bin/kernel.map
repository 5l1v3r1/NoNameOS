
Allocating common symbols
Common symbol       size              file

isr_handlers        0x400             isr.o
console_mem         0x10              console.o
paging_pageDir      0x10              ./mm/paging.o
gdt_pointer         0x10              gdt.o
idt_table           0x800             idt.o
physical_bitmapSize
                    0x10              ./mm/physical.o
gdt_table           0x20              gdt.o
idt_pointer         0x10              idt.o
physical_bitmap     0x10              ./mm/physical.o
console_x           0x10              console.o
console_attrib      0x10              console.o
scheduler_queue     0x400             ./tasking/scheduler.o
console_y           0x10              console.o

Memory Configuration

Name             Origin             Length             Attributes
*default*        0x00000000         0xffffffff

Linker script and memory map

                0x00100000                phys = 0x100000
                0xc0001000                virt = 0xc0001000

.setup          0x00100000     0x1000 load address 0x00100000
                0x00100000                setup = .
 *(.setup)
 .setup         0x00100000       0x70 loader.o
                0x00100000                setup
                0x00101000                . = ALIGN (0x1000)
 *fill*         0x00100070      0xf90 00

.kernel         0xc0001000     0x2000 load address 0x00101000
                0xc0001000                kernel = .
 *(.kernel)
 .kernel        0xc0001000      0x207 loader.o
                0xc00010ef                isr20
                0xc0001121                isr25
                0xc00011c1                irq09
                0xc000106c                isr03
                0xc00010bd                isr15
                0xc000109b                isr10
                0xc000117b                irq02
                0xc00010db                isr18
                0xc0001057                isr00
                0xc000110d                isr23
                0xc0001073                isr04
                0xc000118f                irq04
                0xc0001171                irq01
                0xc00010f9                isr21
                0xc00011f3                irq14
                0xc00011a3                irq06
                0xc0001094                isr09
                0xc000113f                isr28
                0xc000112b                isr26
                0xc0001149                isr29
                0xc000115d                isr31
                0xc00010a0                isr11
                0xc00010c7                isr16
                0xc00010ad                isr13
                0xc0001117                isr24
                0xc0001185                irq03
                0xc0001000                start
                0xc00011d5                irq11
                0xc0001167                irq00
                0xc00011e9                irq13
                0xc0001081                isr06
                0xc000108f                isr08
                0xc00011b7                irq08
                0xc0001135                isr27
                0xc0001065                isr02
                0xc0001153                isr30
                0xc00010e5                isr19
                0xc00010b5                isr14
                0xc000105e                isr01
                0xc00010d1                isr17
                0xc00011cb                irq10
                0xc000107a                isr05
                0xc00011fd                irq15
                0xc00010a5                isr12
                0xc0001199                irq05
                0xc0001103                isr22
                0xc00011df                irq12
                0xc00011ad                irq07
                0xc0001088                isr07
 *(.text)
 *fill*         0xc0001207        0x9 00
 .text          0xc0001210       0xa0 kernel.o
                0xc000125c                kernel_init
                0xc0001210                memset
                0xc0001243                kernel_lock
                0xc0001239                outportb
                0xc000124b                kernel_unlock
                0xc000122e                inportb
 .text          0xc00012b0      0x7b0 console.o
                0xc0001902                console_init
                0xc0001738                console_getAttrib
                0xc00017eb                console_setCursor
                0xc00016e3                console_putChar
                0xc00014d8                console_putuint
                0xc00018ee                console_beep
                0xc0001451                console_puthex
                0xc00015a0                console_putch
                0xc00012b0                kprintf
                0xc000184f                console_cls
                0xc0001756                console_scrollup
                0xc000172e                console_setAttrib
                0xc0001409                console_putint
                0xc0001711                console_getChar
 .text          0xc0001a60      0x160 gdt.o
                0xc0001a60                gdt_setEntry
                0xc0001ac3                gdt_init
 .text          0xc0001bc0       0xd0 idt.o
                0xc0001bff                idt_init
                0xc0001bc0                idt_setEntry
 .text          0xc0001c90       0xd0 irq.o
                0xc0001d1b                irq_init
                0xc0001c90                irq_remap
 .text          0xc0001d60      0x1f0 isr.o
                0xc0001f40                isr_setHandler
                0xc0001eb1                isr_dispatcher
 .text          0xc0001f50      0x480 debug.o
                0xc00020e7                debug_putch
                0xc000201f                debug_putuint
                0xc000210a                debug_kprintf
                0xc0001f98                debug_puthex
                0xc0001f50                debug_putint
 .text          0xc00023d0      0x290 ./mm/mm.o
                0xc000246f                mm_free
                0xc00023d0                mm_init
                0xc00024fc                mm_malloc
                0xc00023e5                mm_morecore
 .text          0xc0002660      0x360 ./mm/paging.o
                0xc000267d                paging_clearDirectory
                0xc000266c                paging_getPageDirectoryEntry
                0xc0002903                paging_init
                0xc0002664                paging_setCurrentPageDir
                0xc00027b9                paging_setPageTableEntry
                0xc00026bb                paging_setPageDirectoryEntry
                0xc00026fe                paging_getPageTableEntry
                0xc0002660                paging_getCurrentPageDir
                0xc00028e3                paging_pageFaultHandler
 .text          0xc00029c0      0x240 ./mm/physical.o
                0xc00029e2                physical_pageAllocAddress
                0xc0002ac4                physical_pageFree
                0xc0002b0c                physical_init
                0xc0002a36                physical_pageAlloc
                0xc00029c0                physical_isPageFree
                0xc0002a30                physical_getBitmapSize
 .text          0xc0002c00      0x1d0 ./tasking/scheduler.o
                0xc0002d65                scheduler_init
                0xc0002d5f                scheduler_ltr
                0xc0002c36                scheduler_addTask
                0xc0002caa                scheduler_switch
                0xc0002c00                ThreadTest1
                0xc0002c44                scheduler_removeTask
                0xc0002c1b                ThreadTest2
 .text          0xc0002dd0       0xd0 ./tasking/task.o
                0xc0002dd0                task_destroy
                0xc0002dfc                task_create
                0xc0003000                . = ALIGN (0x1000)
 *fill*         0xc0002ea0      0x160 00

.data           0xc0003000     0x1000 load address 0x00103000
                0xc0003000                data = .
 *(.data)
 .data          0xc0003000       0x80 idt.o
                0xc0003000                isr_stubs
 .data          0xc0003080       0x40 irq.o
                0xc0003080                irq_stubs
 .data          0xc00030c0       0x80 isr.o
                0xc00030c0                isr_messages
                0xc0004000                . = ALIGN (0x1000)
 *fill*         0xc0003140      0xec0 00

.bss            0xc0004000     0x4000 load address 0x00104000
                0xc0004000                bss = .
 *(.bss)
 .bss           0xc0004000     0x1000 loader.o
 .bss           0xc0005000        0x4 kernel.o
                0xc0005000                kernel_lockCount
 .bss           0xc0005004        0x8 ./mm/mm.o
                0xc0005004                mm_heapTop
                0xc0005008                mm_heapBottom
 .bss           0xc000500c        0xc ./tasking/scheduler.o
                0xc0005010                scheduler_ticks
                0xc0005014                scheduler_currentTask
                0xc000500c                current_esp
 .bss           0xc0005018        0x4 ./tasking/task.o
                0xc0005018                task_total
                0xc0006000                . = ALIGN (0x1000)
 *fill*         0xc000501c      0xfe4 00
 *(COMMON)
 COMMON         0xc0006000       0x40 console.o
                0xc0006000                console_mem
                0xc0006010                console_x
                0xc0006020                console_attrib
                0xc0006030                console_y
 COMMON         0xc0006040       0x30 gdt.o
                0xc0006040                gdt_pointer
                0xc0006050                gdt_table
 COMMON         0xc0006070      0x810 idt.o
                0xc0006070                idt_table
                0xc0006870                idt_pointer
 COMMON         0xc0006880      0x400 isr.o
                0xc0006880                isr_handlers
 COMMON         0xc0006c80       0x10 ./mm/paging.o
                0xc0006c80                paging_pageDir
 COMMON         0xc0006c90       0x20 ./mm/physical.o
                0xc0006c90                physical_bitmapSize
                0xc0006ca0                physical_bitmap
 COMMON         0xc0006cb0      0x400 ./tasking/scheduler.o
                0xc0006cb0                scheduler_queue
                0xc0008000                . = ALIGN (0x1000)
 *fill*         0xc00070b0      0xf50 00
                0xc0008000                _end = .
LOAD loader.o
LOAD kernel.o
LOAD console.o
LOAD gdt.o
LOAD idt.o
LOAD irq.o
LOAD isr.o
LOAD debug.o
LOAD ./mm/mm.o
LOAD ./mm/paging.o
LOAD ./mm/physical.o
LOAD ./tasking/scheduler.o
LOAD ./tasking/task.o
OUTPUT(../../bin/kernel.coff coff-go32)

.comment        0xc0008000       0xf0
 .comment       0xc0008000       0x14 kernel.o
 .comment       0xc0008014       0x14 console.o
 .comment       0xc0008028       0x14 gdt.o
 .comment       0xc000803c       0x14 idt.o
 .comment       0xc0008050       0x14 irq.o
 .comment       0xc0008064       0x14 isr.o
 .comment       0xc0008078       0x14 debug.o
 .comment       0xc000808c       0x14 ./mm/mm.o
 .comment       0xc00080a0       0x14 ./mm/paging.o
 .comment       0xc00080b4       0x14 ./mm/physical.o
 .comment       0xc00080c8       0x14 ./tasking/scheduler.o
 .comment       0xc00080dc       0x14 ./tasking/task.o
